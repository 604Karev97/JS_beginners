console.log(null > 0); // false
console.log(null >= 0); // true
console.log(null < 0); // false
console.log(null <= 0); // true
console.log(null == 0); // false

/*
Интересны случаи, когда:

console.log(null >= 0); // true
console.log(null <= 0); // true
console.log(null == 0); // false

null >= (<=) 0:
Как я понял из материала на хабре, данные операторы принимаю значение true, потому что null > (<) 0 дают false,
а они являются обратными исходным. То есть: если null не меньше нуля, значит больше либо равен нулю.
Как-то так:)

null == 0:
Оператор == использует абстрактный алгоритм сравнения для равенств.
        1. Если Тип(x) отличается от Типа(y) - переход на шаг 14.
        2. Если Тип(x) равен Undefined - вернуть true.
        3. Если Тип(x) равен Null - вернуть true.
        4. Если Тип(x) не равен Number - переход на шаг 11.
        5. Если x является NaN - вернуть false.
        6. Если y является NaN - вернуть false.
        7. Если x является таким же числовым значением, что и y, - вернуть true.
        8. Если x равен +0, а y равен -0, вернуть true.
        9. Если x равен -0, а y равен +0, вернуть true.
        10. Вернуть false.
        11. Если Тип(x) равен String - вернуть true, если x и y являются в точности одинаковыми последовательностями символов (имеют одинаковую длину и одинаковые символы в соответствующих позициях). Иначе вернуть false.
        12. Если Тип(x) равен Boolean, вернуть true, если x и y оба равны true или оба равны false. Иначе вернуть false.
        13. Вернуть true, если x и y ссылаются на один и тот же объект или они ссылаются на объекты, которые были объединены вместе (см. раздел 13.1.2). Иначе вернуть false.
        14. Если x равно null, а y равно undefined - вернуть true.
        15. Если x равно undefined, а y равно null - вернуть true.
        16. Если Тип(x) равен Number, а Тип(y) равен String, вернуть результат сравнения x == ToNumber(y).
        17. Если Тип(x) равен String, а Тип(y) равен Number, вернуть результат сравнения ToNumber(x)== y.
        18. Если Тип(x) равен Boolean, вернуть результат сравнения ToNumber(x)== y.
        19. Если Тип(y) равен Boolean, вернуть результат сравнения x == ToNumber(y).
        20. Если Тип(x) - String или Number, а Тип(y) - Object, вернуть результат сравнения x == ToPrimitive(y).
        21. Если Тип(x) - Object, а Тип(y) - String или Number, вернуть результат сравнения ToPrimitive(x)== y.
        22. Вернуть false.
Судя по этому алгоритму, типы нул и нуля отличаются, поэтому переходим на пункт 14, далее мы игнорируем последующие пункты до 22 го, где результат false.
 */